.. role:: underline
    :class: underline
.. role:: bolditalic
    :class: bolditalic

***********
Running UPP
***********

Three scripts for running the UPP package are included in the tar file:
 - :bolditalic:`run_unipost`
 - :bolditalic:`run_unipostandgrads`
 - :bolditalic:`run_unipostandgempak`

:underline:`Before running any of the above listed scripts, perform the following instructions:`

1. :bolditalic:`cd` to your **DOMAINPATH** directory. This is the top  working directory for the run.

2. Make a directory to put the UPP results.

       | :bolditalic:`mkdir postprd`

3. Make a directory for staging a copy of the desired control file.

       | :bolditalic:`mkdir parm`

4. If desired, edit the :bolditalic:`UPPV4.1/parm/postcntrl_gfs.xml` file to reflect the fields and levels you
   want unipost to output. Re-make the :bolditalic:`postxconfig-NT-GFS.txt` file following the steps in the
   "Control File: Creating the Flat Text File" section.
   
5. Copy over the :bolditalic:`UPPV4.1/parm/postxconfig-NT-GFS.txt` control file for FV3 to the **parm/**
   directory to customize unipost.

6. Copy over the :bolditalic:`UPPV4.1/scripts/run_unipost*` script of your choice to the **postprd/** directory.

7. Edit the run script as outlined in the "Run Script Overview" section. Once these directories are set up and the edits outlined
   below are complete, the scripts can be run interactively from the postprd directory by simply typing the script name on the
   command line.

===================
Run Script Overview
===================

.. note::
   It is recommended that the user refer to the :bolditalic:`run_unipost*` scripts in the **scripts/** directory while reading
   this overview. All user modified variables are contained at the top of the :bolditalic:`run_unipost*` script in one user-edit section,
   along with a brief description. Descriptions below follow the :bolditalic:`run_unipost` script.

1. Set up basic path variables

       | **TOP_DIR**: Top level directory for source code (**UPPV4.1**)
       | **DOMAINPATH**: Working directory for this run
       | **UNIPOST_HOME**: Location of the **UPPV4.1** build directory
       | **POSTEXEC**: Location of the **UPPV4.1** executables
       | **modelDataPath**: Location of the model output data files to be processed (e.g. **gfsprd/** for FV3-based runs)
       | **txtCntrlFile**: Name and location of :bolditalic:`postxconfig-NT.txt` file that lists desired fields for GRIB2 format.
         This file is generated by the user following the steps listed above in the "Control File" section.

   .. note::
      For FV3, the scripts are configured such that unipost expects the FV3 history files (e.g. :bolditalic:`dyn*/phy*` files)
      to be in **gfsprd/**, the :bolditalic:`postxconfig-NT.txt` file to be in **parm/**, and the postprocessor working directory to be
      called **postprd/**, all under **DOMAINPATH**.
      This setup is for user convenience to have a script ready to run, paths may be modified but be sure to check
      the run script to make sure settings are correct.

2. Specify dynamic core being run

       | **dyncore**: What model core is used ("FV3")

3. Specify the format for the input model files and output UPP files

       | **inFormat**: Format of the model data ("binarynemiompiio" or "netcdf")
       | **outFormat**: Format of output from UPP (grib2)

4. Specify the forecast cycles to be post-processed

       | **startdate**: Forecast start date (YYYYMMDDHH)
       | **fhr**: First forecast hour to be post-processed
       | **lastfhr**: Last forecast hour to be post-processed
       | **incrementhr**: Increment (in hours) between forecast files
       |                  *Do not set to 0 or the script will loop continuously*

5. Set/uncomment the run command for your system. (i.e. serial, mpirun, etc).

       | **RUN_COMMAND**: System run command for serial or parallel runs

       |     - The default execution command in the distributed scripts is for a single processor:
       |       :bolditalic:`./unipost.exe > unipost_${domain}.${fhr}.out 2>&1`

       |     - To run unipost using mpi (dmpar compilation), the command line should be:
       |       >> LINUX-MPI systems: :bolditalic:`mpirun -np N unipost.exe > outpost 2>&1`
       |          (Note: On some systems a host file also needs to be specified: :bolditalic:`-machinefile "host"`)
       |       >> IBM: :bolditalic:`mpirun.lsf unipost.exe < itag > outpost`
       |       >> SGI MPT: :bolditalic:`mpiexec_mpt unipost.exe < itag > outpost`

6. Set naming convention for prefix and extension of output file name
    - **comsp** is the initial string of the output file name. By default it is not set and the prefix of the
      output file will be the string set in :bolditalic:`postcntrl.xml DATSET`, if set it will concatenate the
      setting to the front of the string specified in the :bolditalic:`postcntrl.xml DATSET`
    - **tmmark** is used for the file extension (in :bolditalic:`run_unipost`, *tmmark=tm00*; if not set, it is set to .GrbF)

If scripts :bolditalic:`run_unipostandgrads` or :bolditalic:`run_unipostandgempak` are used, additional steps are taken to
create image files (see Visualization section).

Upon a successful run, unipost will generate output files :bolditalic:`GFSPRS.hh`, in the postprocessor working directory, where :bolditalic:`"hh"` denotes the forecast hour. In addition, the script :bolditalic:`run_unipostandgrads` will produce a suite of png images named :bolditalic:`variablehh_GrADS.png`,
and the script :bolditalic:`run_unipostandgempak` will produce a suite of gif images named :bolditalic:`variablehh.gif`.

If the run did not complete successfully, a log file in the post-processor working directory called :bolditalic:`unipost.hh.out`, where :bolditalic:`"hh"` is the forecast hour, may be consulted for further information.

.. note::
   FV3 output is on a Guassian grid. To interpolate to a lat/lon or other projection, use wgrib2 (see "Examples of wgrib2" section).
